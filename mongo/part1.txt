3.1
> db.restaurants.count({borough: "Queens", cuisine: "Chinese"})
> db.restaurants.count({borough: {$eq: "Queens"}, cuisine: {$eq: "Chinese"}})
> db.restaurants.count({$and: [{borough: {$eq: "Queens"}}, {cuisine: {$eq: "Chinese"}}]})
> db.restaurants.find({$and: [{borough: {$eq: "Queens"}}, {cuisine: {$eq: "Chinese"}}]}).count()
728

3.2
> db.restaurants.find({}, {_id: 1}).sort({"grades.score": -1}).limit(1)
{ "_id" : ObjectId("5a5e03be4226c240e5af8973") }

3.3
> db.restaurants.updateMany({borough: "Manhattan"}, {$push: {grades: {grade: "A", score: 7, date: ISODate()}}})
{ "acknowledged" : true, "matchedCount" : 10259, "modifiedCount" : 10259 }

3.4
> db.restaurants.find({"grades.8.score": {$lt: 7}}, {_id: 0, name: 1})
{ "name" : "Silver Krust West Indian Restaurant" }
{ "name" : "Pure Food" }

3.5
> db.restaurants.find({cuisine: "Seafood", grades: {$elemMatch: {grade: "B", date: {$gte: ISODate("2014-02-01"), $lte: ISODate("2014-03-01")}}}}, {borough: 1})
{ "_id" : ObjectId("5a5e03be4226c240e5afbd7f"), "borough" : "Bronx" }
{ "_id" : ObjectId("5a5e03bf4226c240e5afbff7"), "borough" : "Manhattan" }

4.1
> db.restaurants.createIndex({"name": 1})
{
        "createdCollectionAutomatically" : false,
        "numIndexesBefore" : 1,
        "numIndexesAfter" : 2,
        "ok" : 1
}
> db.restaurants.getIndexes()
[
        ...
        {
                "v" : 2,
                "key" : {
                        "name" : 1
                },
                "name" : "name_1",
                "ns" : "frontcamp.restaurants"
        }
]
> db.restaurants.explain().find({name: "Glorious Food"})
{
        "queryPlanner" : {
                ...
                "parsedQuery" : {
                        "name" : {
                                "$eq" : "Glorious Food"
                        }
                },
                "winningPlan" : {
                        "stage" : "FETCH",
                        "inputStage" : {
                                "stage" : "IXSCAN",
                                "keyPattern" : {
                                        "name" : 1
                                },
                                "indexName" : "name_1",
                                "isMultiKey" : false,
                                "multiKeyPaths" : {
                                        "name" : [ ]
                                },
                                "isUnique" : false,
                                "isSparse" : false,
                                "isPartial" : false,
                                "indexVersion" : 2,
                                "direction" : "forward",
                                "indexBounds" : {
                                        "name" : [
                                                "[\"Glorious Food\", \"Glorious Food\"]"
                                        ]
                                }
                        }
                },
                "rejectedPlans" : [ ]
        },
        ...
        "ok" : 1
}


4.2
> db.restaurants.dropIndex({"name": 1})
{ "nIndexesWas" : 2, "ok" : 1 }

4.3
> db.restaurants.createIndex({restaurant_id: 1, borough: 1})
{
        "createdCollectionAutomatically" : false,
        "numIndexesBefore" : 1,
        "numIndexesAfter" : 2,
        "ok" : 1
}
> db.restaurants.explain("executionStats").find({restaurant_id: "41098650"}, {_id: 0, borough: 1})
{
        "queryPlanner" : {
                ...
                "parsedQuery" : {
                        "restaurant_id" : {
                                "$eq" : "41098650"
                        }
                },
                "winningPlan" : {
                        "stage" : "PROJECTION",
                        "transformBy" : {
                                "_id" : 0,
                                "borough" : 1
                        },
                        "inputStage" : {
                                "stage" : "IXSCAN",
                                "keyPattern" : {
                                        "restaurant_id" : 1,
                                        "borough" : 1
                                },
                                "indexName" : "restaurant_id_1_borough_1",
                                "isMultiKey" : false,
                                "multiKeyPaths" : {
                                        "restaurant_id" : [ ],
                                        "borough" : [ ]
                                },
                                "isUnique" : false,
                                "isSparse" : false,
                                "isPartial" : false,
                                "indexVersion" : 2,
                                "direction" : "forward",
                                "indexBounds" : {
                                        "restaurant_id" : [
                                                "[\"41098650\", \"41098650\"]"
                                        ],
                                        "borough" : [
                                                "[MinKey, MaxKey]"
                                        ]
                                }
                        }
                },
                "rejectedPlans" : [ ]
        },
        "executionStats" : {
                "executionSuccess" : true,
                "nReturned" : 1,
                "executionTimeMillis" : 2,
                "totalKeysExamined" : 1,
                "totalDocsExamined" : 0,
                "executionStages" : {
                        ...
                }
        },
        ...
        "ok" : 1
}

4.4
> db.restaurants.createIndex({cuisine: 1}, {partialFilterExpression: {borough: "Staten Island"}})
{
        "createdCollectionAutomatically" : false,
        "numIndexesBefore" : 1,
        "numIndexesAfter" : 2,
        "ok" : 1
}
> db.restaurants.explain().find({borough: "Staten Island", cuisine: "American"})
{
        "queryPlanner" : {
                ...
                "parsedQuery" : {
                        "$and" : [
                                {
                                        "borough" : {
                                                "$eq" : "Staten Island"
                                        }
                                },
                                {
                                        "cuisine" : {
                                                "$eq" : "American"
                                        }
                                }
                        ]
                },
                "winningPlan" : {
                        ...
                        "inputStage" : {
                                "stage" : "IXSCAN",
                                ...
                        }
                },
                "rejectedPlans" : [ ]
        },
        ...
        "ok" : 1
}
> db.restaurants.explain().find({borough: "Staten Island", name: "Bagel Land"})
{
        "queryPlanner" : {
                ...
                "parsedQuery" : {
                        "$and" : [
                                {
                                        "borough" : {
                                                "$eq" : "Staten Island"
                                        }
                                },
                                {
                                        "name" : {
                                                "$eq" : "Bagel Land"
                                        }
                                }
                        ]
                },
                "winningPlan" : {
                        "stage" : "COLLSCAN",
                        ...
                },
                "rejectedPlans" : [ ]
        },
        ...
        "ok" : 1
}
> db.restaurants.explain().find({borough: "Queens", cuisine: "Pizza"})
{
        "queryPlanner" : {
                ...
                "parsedQuery" : {
                        "$and" : [
                                {
                                        "borough" : {
                                                "$eq" : "Queens"
                                        }
                                },
                                {
                                        "cuisine" : {
                                                "$eq" : "Pizza"
                                        }
                                }
                        ]
                },
                "winningPlan" : {
                        "stage" : "COLLSCAN",
                        ...
                },
                "rejectedPlans" : [ ]
        },
        ...
        "ok" : 1
}

4.5
> db.restaurants.createIndex({"grades.8.score": 1})
{
        "createdCollectionAutomatically" : false,
        "numIndexesBefore" : 1,
        "numIndexesAfter" : 2,
        "ok" : 1
}
> db.restaurants.explain().find({"grades.8.score": {$lt: 7}}, {_id: 0, name: 1})
{
        "queryPlanner" : {
                "plannerVersion" : 1,
                "namespace" : "frontcamp.restaurants",
                "indexFilterSet" : false,
                "parsedQuery" : {
                        "grades.8.score" : {
                                "$lt" : 7
                        }
                },
                "winningPlan" : {
                        "stage" : "PROJECTION",
                        "transformBy" : {
                                "_id" : 0,
                                "name" : 1
                        },
                        "inputStage" : {
                                "stage" : "FETCH",
                                "inputStage" : {
                                        "stage" : "IXSCAN",
                                        "keyPattern" : {
                                                "grades.8.score" : 1
                                        },
                                        "indexName" : "grades.8.score_1",
                                        ...
                                }
                        }
                },
                "rejectedPlans" : [ ]
        },
        ...
        "ok" : 1
}
